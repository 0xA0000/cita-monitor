name: pipeline of agent

on: [push]

jobs:
  
  test:
    runs-on: ubuntu-latest
    steps:
      - name: "Setup environment"
        uses: actions/setup-python@v2
        with:
          python-version: '3.5.4'
      - name: "Checking out code"
        uses: actions/checkout@v2
      - name: "Testing code"
        run: |
          pwd && ls -a -l
          make deps
          make test
        
  code_audit:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: "Setup environment"
        uses: actions/setup-python@v2
        with:
          python-version: '3.5.4'
      - name: "Checking out code"
        uses: actions/checkout@v2
      - name: "Scaning code"
        run: |
          make deps
          make code-quality
          
  build:
    needs: [test, code_audit]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: agent
    steps:
      - name: "Checking out code"
        uses: actions/checkout@v2
        with:
          submodules: recursive
      # - name: "Building docker images on AMD64"
      #   env:
      #     DOCKERHUB_USERNAME: "${{ secrets.DOCKERHUB_USERNAME }}"
      #     DOCKERHUB_PASSWORD: "${{ secrets.DOCKERHUB_PASSWORD }}"
      #   run: |
      #     sudo apt-get install -y docker-compose
      #     sudo cp -v .env.example .env
      #     sudo docker-compose -f docker-compose-with-build.yml build
      #     echo "${DOCKERHUB_PASSWORD}" | sudo docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
      #     sudo docker-compose -f docker-compose-with-build.yml push
      - name: "Build Docker on AARCH64"
        uses: uraimo/run-on-arch-action@v2.0.5
        with:
          arch: aarch64
          distro: ubuntu18.04
          run: |
            id
            sudo apt-get install -y docker-compose
            sudo cp -v .env.example .env
            sudo docker-compose -f docker-compose-with-build.yml build
            echo "${DOCKERHUB_PASSWORD}" | sudo docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
            sudo docker-compose -f docker-compose-with-build.yml push
            
            
            
